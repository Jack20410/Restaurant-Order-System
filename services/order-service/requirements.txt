# Core FastAPI dependencies
fastapi==0.109.2
uvicorn==0.27.1

# Database
sqlalchemy==2.0.27
pymysql==1.1.0  # Replacing mysqlclient for better compatibility
python-dotenv==1.0.1

# API Models & Validation 
pydantic==2.6.1  # Updated to latest version for better FastAPI compatibility
python-multipart==0.0.9

# HTTP Client
requests==2.31.0

# Authentication & Security (needed for communicating with user-service)
python-jose[cryptography]==3.3.0
#Run pip install -r requirements.txt to install all the dependencies

# Phạm vi trách nhiệm:
#	- Quản lý đơn hàng của khách
#	- Xử lý thanh toán
#	- Quản lý khách hàng thân thiết

# 📌 Database (MySQL)
# 1️ Bảng customers (Quản lý khách hàng)
# customer_id	name	phone	customer_type	points
# INT (PK)	VARCHAR	VARCHAR	ENUM(vãng lai, thân thiết)	INT
# 2️ Bảng orders (Quản lý đơn hàng)
# order_id	customer_id	waiter_id	table_id	status	total_price	created_at
# INT (PK)	INT (FK -> customers)	INT (FK -> users)	INT	ENUM(pending, cooking, served, paid)	FLOAT	TIMESTAMP
# 3️ Bảng payments (Xử lý thanh toán)
# payment_id	order_id	payment_type
# INT (PK)	INT (FK -> orders)	ENUM(cash, card, e-wallet)


# 📌 API Cần Làm
# ✔ POST /customers → Thêm khách hàng ===> Đã làm
# ✔ GET /customers/{id} → Xem thông tin khách hàng ===> Đã làm
# ✔ PUT /customers/{id} → Cập nhật điểm thành viên ===> Đã làm
# ✔ POST /orders → Tạo đơn hàng ===> Đã làm
# ✔ PUT /orders/{id} → Cập nhật đơn hàng ===> Đã làm
# ✔ POST /payments → Xử lý thanh toán ===> Đã làm

# order-service/
# │── main.py               # Chạy FastAPI app
# │── models.py             # Định nghĩa database models
# │── database.py           # Kết nối MySQL
# │── routers/
# │   ├── orders.py         # API quản lý đơn hàng
# │   ├── payments.py       # API xử lý thanh toán
# │── services/
# │   ├── order_service.py  # Business logic của order
# │   ├── payment_service.py# Business logic của payment
# │── requirements.txt      # Các thư viện cần cài đặt
# │── Dockerfile            # Docker build
