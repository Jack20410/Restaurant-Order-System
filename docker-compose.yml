version: '3.8'

services:
  user-service:
    build: 
      context: ./services/user-service
      dockerfile: Dockerfile
    ports:
      - "8001:8000"
    environment:
    #  MUST CHANGE
      - DATABASE_URL=mysql://user:password@user-db:3306/user_db
      - JWT_SECRET=your-secret-key
    depends_on:
      - user-db
    networks:
      - restaurant-network

  order-service:
    build:
      context: ./services/order-service
      dockerfile: Dockerfile
    ports:
      - "8002:8000"
    environment:
    #  MUST CHANGE
      - DATABASE_URL=mysql://user:password@order-db:3306/order_db
    depends_on:
      - order-db
      - user-service
    networks:
      - restaurant-network

  kitchen-service:
    build:
      context: ./services/kitchen-service
      dockerfile: Dockerfile
    ports:
      - "8003:8000"
    environment:
    #  MUST CHANGE
      - MONGODB_URL=mongodb://mongodb:27017/kitchen_db
    depends_on:
      - mongodb
    networks:
      - restaurant-network

  user-db:
    image: mysql:8.0
    environment:
    #  MUST CHANGE
      - MYSQL_ROOT_PASSWORD=rootpassword
      - MYSQL_DATABASE=user_db
      - MYSQL_USER=user
      - MYSQL_PASSWORD=password
    ports:
      - "3306:3306"
    volumes:
      - user-db-data:/var/lib/mysql
    networks:
      - restaurant-network

  order-db:
    image: mysql:8.0
    environment:
    #  MUST CHANGE
      - MYSQL_ROOT_PASSWORD=rootpassword
      - MYSQL_DATABASE=order_db
      - MYSQL_USER=user
      - MYSQL_PASSWORD=password
    ports:
      - "3307:3306"
    volumes:
      - order-db-data:/var/lib/mysql
    networks:
      - restaurant-network

  mongodb:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - mongodb-data:/data/db
    networks:
      - restaurant-network

volumes:
  user-db-data:
  order-db-data:
  mongodb-data:

networks:
  restaurant-network:
    driver: bridge
